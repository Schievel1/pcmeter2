#+title: Readme

* Overview
This is a Rust program, that collects system info data and sends it over to the pc-meter-pico via USB hidraw.
It can be used with the [[https://github.com/Schievel1/pcmeter2/tree/main/kernel-module][kernel module]] simultaneously, when the kernel is sending the [[https://github.com/Schievel1/pcmeter2/tree/main/kernel-module#data-of-the-sent-report][system report]] and this program sends only the user-report. With the ~-s / --system~ flag this program also sends the system report, so the kernel module is not needed anymore.

** Daemons
On Linux

* Installation
** Linux
*** Manually, from source
To compile this program yourself, you need a working Rust compiler on your system. Get it [[https://www.rust-lang.org/tools/install][here]].
Once this is working, compile the program
#+begin_src bash
make
#+end_src

Then install it. Depending on your init system, this can install daemons for openRC or service files for systemd
#+begin_src bash
sudo make install
#+end_src

** Windows
I tested this and it works fine on windows as well. Compile with
#+begin_src bash
cargo build --release
#+end_src
and copy the program in ~target/release/pc-meterd~ to anywhere you like.
On windows you can surely start this up at boot by putting a link to the binary into ~shell:startup~.

** MacOS
I don't have a Mac, but since the hidapi crate and the sysinfo crate promise do work in Mac as well I assume it will work too.

* Customization
~pc-meterd~ can send the system report with CPU and memory data with the ~-s / --system~ flag and with the ~-i / --interval~ flag the pauses between sending can the changed.

To set those flags for the daemon, edit ~/etc/conf.d/pc-meterd~  (when on openRC) or run ~sudo systemctl edit pc-meterd~ (on systemd).

* Data of the reports
** System report
[[https://github.com/Schievel1/pcmeter2/blob/main/kernel-module/Readme.org#data-of-the-sent-report][Kernel module readme]]

** User report
The data of the user report consists of the following

|  Byte | Purpose                                         |
|-------+-------------------------------------------------|
|     0 | Always 0, HID report number for hid raw devices |
|     1 | 1, user report identifier                       |
|     2 | swap usage in %                                 |
|     3 | load average 1 minute, integer                  |
|     4 | load average 1 minute, fraction                 |
|     5 | load average 5 minute, integer                  |
|     6 | load average 5 minute, fraction                 |
|     7 | load average 15 minute, integer                 |
|     8 | load average 15 minute, fraction                |
|     9 | number of disks                                 |
| 10-19 | disks usage of each disk                        |
| 20-39 | temperature of each component                   |
|-------+-------------------------------------------------|

*** Individual data for each system
Not every system is the same. For example we can not know what the disks are, their order their device names.
Using the flags ~-c / --components~ and ~-d / --disks~ the disks and components can be displayed including their position in the buffer.
